/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'panda' at '10/2/16 8:46 AM' with Gradle 3.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'java'

version = "1.0"
description = """
Provides additional serializers and deserializers for Jackson to easier usage lazy serialization and
deserialization via iterators and stream
"""

// Spock works with Java 1.5 and above
sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    def jacksonVersion = '2.8.2'

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    // https://mvnrepository.com/artifact/uk.com.robust-it/cloning
    compile group: 'uk.com.robust-it', name: 'cloning', version: '1.9.3'

    // The production code uses the SLF4J logging API at compile time
    testCompile 'org.slf4j:slf4j-api:1.7.21'

    // mandatory dependencies for using Spock
    testCompile "org.codehaus.groovy:groovy-all:2.4.7"
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

    // optional dependencies for using Spock
    testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
    testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
    testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

compileJava {
    options.fork = true
    options.incremental = true
    options.compilerArgs << '-parameters'
}
